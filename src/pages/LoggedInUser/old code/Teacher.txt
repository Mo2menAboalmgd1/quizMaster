// old code




import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { useCurrentUser } from "../../store/useStore";
import TeacherExamsList from "../../components/TeacherExamsList";
import { useExamsByTeacherId } from "../../QueriesAndMutations/QueryHooks";

export default function Teacher() {
  const { currentUser } = useCurrentUser();
  const [activeTab, setActiveTab] = useState("published");
  const [animationComplete, setAnimationComplete] = useState(false);

  console.log(currentUser);

  const {
    data: teacherExams,
    isLoading: isTeacherExamsLoading,
    error: teacherExamsError,
  } = useExamsByTeacherId(currentUser.id, false);

  console.log(teacherExams);

  useEffect(() => {
    if (!isTeacherExamsLoading && teacherExams) {
      setTimeout(() => {
        setAnimationComplete(true);
      }, 300);
    }
  }, [isTeacherExamsLoading, teacherExams]);

  if (isTeacherExamsLoading) {
    return (
      <div className="flex justify-center items-center py-12">
        <div className="flex flex-col items-center">
          <div className="w-12 h-12 border-4 border-green-400 border-t-transparent rounded-full animate-spin"></div>
          <p className="mt-4 text-gray-600">جاري تحميل الامتحانات...</p>
        </div>
      </div>
    );
  }

  if (teacherExamsError) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4 text-center">
        <svg
          className="w-10 h-10 mx-auto text-red-500 mb-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          ></path>
        </svg>
        <h3 className="text-lg font-medium text-red-800 mb-1">
          خطأ في تحميل البيانات
        </h3>
        <p className="text-red-700">{teacherExamsError.message}</p>
      </div>
    );
  }

  if (!teacherExams) {
    return (
      <div className="text-center py-12">
        <svg
          className="w-16 h-16 mx-auto text-gray-400 mb-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          ></path>
        </svg>
        <p className="text-lg text-gray-600">لا يوجد امتحانات حاليا</p>
      </div>
    );
  }

  const completedExams = teacherExams.filter((exam) => exam.done);
  const incompletedExams = teacherExams.filter((exam) => !exam.done);

  return (
    <div
      className="transition-opacity duration-500 ease-in-out"
      style={{ opacity: animationComplete ? "1" : "0" }}
    >
      <div dir="rtl" className="mb-8">
        {/* Welcome message */}
        <div className="bg-white rounded-lg shadow-sm mb-6 overflow-hidden">
          <div className="bg-gradient-to-r from-green-500 to-emerald-500 p-5">
            <h2 className="text-white text-xl font-bold">
              مرحباً، {currentUser.name}
            </h2>
            <p className="text-green-50 mt-1">إدارة الامتحانات الخاصة بك</p>
          </div>
          <div className="p-5">
            <div className="flex items-center gap-4 flex-wrap">
              <div className="bg-green-50 p-4 rounded-lg flex items-center gap-3 flex-grow">
                <div className="w-12 h-12 rounded-full bg-green-100 flex items-center justify-center text-green-600 flex-shrink-0">
                  <svg
                    className="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                    ></path>
                  </svg>
                </div>
                <div>
                  <p className="text-sm text-green-800">الامتحانات المنشورة</p>
                  <p className="text-2xl font-bold text-green-900">
                    {completedExams.length}
                  </p>
                </div>
              </div>

              <div className="bg-yellow-50 p-4 rounded-lg flex items-center gap-3 flex-grow">
                <div className="w-12 h-12 rounded-full bg-yellow-100 flex items-center justify-center text-yellow-600 flex-shrink-0">
                  <svg
                    className="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                    ></path>
                  </svg>
                </div>
                <div>
                  <p className="text-sm text-yellow-800">
                    الامتحانات قيد الإنشاء
                  </p>
                  <p className="text-2xl font-bold text-yellow-900">
                    {incompletedExams.length}
                  </p>
                </div>
              </div>

              <Link to="/createTest" className="flex-grow">
                <div className="bg-blue-50 p-4 rounded-lg flex items-center gap-3 hover:bg-blue-100 transition-colors cursor-pointer">
                  <div className="w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 flex-shrink-0">
                    <svg
                      className="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M12 4v16m8-8H4"
                      ></path>
                    </svg>
                  </div>
                  <div>
                    <p className="text-sm text-blue-800">إنشاء امتحان جديد</p>
                    <p className="text-lg font-medium text-blue-900">
                      اضغط هنا
                    </p>
                  </div>
                </div>
              </Link>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="bg-white rounded-lg shadow-sm mb-4 p-1 flex">
          <button
            onClick={() => setActiveTab("published")}
            className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${
              activeTab === "published"
                ? "bg-green-500 text-white"
                : "text-gray-600 hover:bg-gray-100"
            }`}
          >
            الامتحانات المنشورة
          </button>
          <button
            onClick={() => setActiveTab("incomplete")}
            className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${
              activeTab === "incomplete"
                ? "bg-yellow-400"
                : "text-gray-600 hover:bg-gray-100"
            }`}
          >
            تحت الإنشاء
          </button>
        </div>

        {/* Content based on active tab */}
        <div className="bg-white rounded-lg shadow-sm p-4">
          {activeTab === "published" ? (
            <>
              {completedExams.length === 0 ? (
                <div className="text-center py-8">
                  <svg
                    className="w-16 h-16 mx-auto text-gray-300 mb-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    ></path>
                  </svg>
                  <p className="text-gray-500">
                    لا يوجد امتحانات منشورة حالياً
                  </p>
                  <button
                    onClick={() => setActiveTab("incomplete")}
                    className="mt-3 text-sm text-blue-600 hover:underline"
                  >
                    انتقل إلى الامتحانات الغير مكتملة
                  </button>
                </div>
              ) : (
                <TeacherExamsList list={completedExams} isDone />
              )}
            </>
          ) : (
            <>
              {incompletedExams.length === 0 ? (
                <div className="text-center py-8">
                  <svg
                    className="w-16 h-16 mx-auto text-gray-300 mb-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                    ></path>
                  </svg>
                  <p className="text-gray-500">لا يوجد امتحانات قيد الإنشاء</p>
                  <Link
                    to="/createTest"
                    className="mt-3 inline-block text-sm text-blue-600 hover:underline"
                  >
                    إنشاء امتحان جديد
                  </Link>
                </div>
              ) : (
                <TeacherExamsList list={incompletedExams} isDone={false} />
              )}
            </>
          )}
        </div>
      </div>

      <div className="bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg shadow-lg p-6 text-center flex flex-col items-center">
        <svg
          className="w-12 h-12 text-white mb-3"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M12 6v6m0 0v6m0-6h6m-6 0H6"
          ></path>
        </svg>
        <h3 className="text-xl font-bold text-white mb-2">إنشاء امتحان جديد</h3>
        <p className="text-blue-100 mb-4">
          استخدم أداة إنشاء الامتحانات الجديدة لإنشاء امتحان جديد بسهولة
        </p>
        <Link
          to="/createTest"
          className="px-6 py-3 bg-white text-blue-600 font-medium rounded-lg shadow hover:shadow-lg transition-all transform hover:-translate-y-1 active:translate-y-0"
        >
          إنشاء امتحان
        </Link>
      </div>
    </div>
  );
}
